@startuml
class           Сотрудник {
+Фамилия
+Имя
#Отчество
-Серия и номер паспорта
+Должность
==
-Принятие товара
-Заказ на продажу товара
-Списание товара
-Отправка на склад
}
Сотрудник -- Товар
class           Товар{
+Наименование товара
+Стоимость
==
-Добавить товар
-Удалить товар
-Отредактировать данные товара
}

frame Leaving { 
class           Заказ{
#Дата
#Данные о товаре
#Сумма заказа
#Информация о доставке
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
Заказ --o Доставщик
class           Доставщик{
#Компания
-ФИО водителя
-Стоимость перевозки
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
}

Товар ..> Заказ

frame Admission { 
class           Накладная{
#Дата
#Вид накладной
#Количество 
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
Накладная --|> Запись_в_накладной
class           Запись_в_накладной {
#Наименование товара
#Количество товара
#Стоимость
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
}

Товар ..> Накладная

frame Write-off { 
Документ_о_списании --* Утилизация
class           Документ_о_списании{
#Дата
#Вид документа
#Количество 
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
class           Утилизация{
-Тип утилизации
-Ответственная компания
-Стоимость
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
}

Товар ..> Документ_о_списании

frame Storage {
class           Склад{
#Номер
#Адрес
#Тип
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
Склад --|> Отделение_склада 
class           Отделение_склада {
#Секция
#Ярус
#Ячейка
==
-Добавить данные
-Удалить данные
-Редактировать данные
}
} 

Товар ..> Склад
@enduml
